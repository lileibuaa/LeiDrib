package lei.buaa.leidrib.greenDao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import lei.buaa.leidrib.bean.LoginUser;
import lei.buaa.leidrib.bean.User;
import lei.buaa.leidrib.bean.Images;
import lei.buaa.leidrib.bean.Shot;
import lei.buaa.leidrib.bean.Comment;

import lei.buaa.leidrib.greenDao.LoginUserDao;
import lei.buaa.leidrib.greenDao.UserDao;
import lei.buaa.leidrib.greenDao.ImagesDao;
import lei.buaa.leidrib.greenDao.ShotDao;
import lei.buaa.leidrib.greenDao.CommentDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig loginUserDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig imagesDaoConfig;
    private final DaoConfig shotDaoConfig;
    private final DaoConfig commentDaoConfig;

    private final LoginUserDao loginUserDao;
    private final UserDao userDao;
    private final ImagesDao imagesDao;
    private final ShotDao shotDao;
    private final CommentDao commentDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        loginUserDaoConfig = daoConfigMap.get(LoginUserDao.class).clone();
        loginUserDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        imagesDaoConfig = daoConfigMap.get(ImagesDao.class).clone();
        imagesDaoConfig.initIdentityScope(type);

        shotDaoConfig = daoConfigMap.get(ShotDao.class).clone();
        shotDaoConfig.initIdentityScope(type);

        commentDaoConfig = daoConfigMap.get(CommentDao.class).clone();
        commentDaoConfig.initIdentityScope(type);

        loginUserDao = new LoginUserDao(loginUserDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        imagesDao = new ImagesDao(imagesDaoConfig, this);
        shotDao = new ShotDao(shotDaoConfig, this);
        commentDao = new CommentDao(commentDaoConfig, this);

        registerDao(LoginUser.class, loginUserDao);
        registerDao(User.class, userDao);
        registerDao(Images.class, imagesDao);
        registerDao(Shot.class, shotDao);
        registerDao(Comment.class, commentDao);
    }
    
    public void clear() {
        loginUserDaoConfig.getIdentityScope().clear();
        userDaoConfig.getIdentityScope().clear();
        imagesDaoConfig.getIdentityScope().clear();
        shotDaoConfig.getIdentityScope().clear();
        commentDaoConfig.getIdentityScope().clear();
    }

    public LoginUserDao getLoginUserDao() {
        return loginUserDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public ImagesDao getImagesDao() {
        return imagesDao;
    }

    public ShotDao getShotDao() {
        return shotDao;
    }

    public CommentDao getCommentDao() {
        return commentDao;
    }

}
